package model;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

public class MockModel implements PortfolioDir {

  private ArrayList<Portfolio> portfolioDirectory = new ArrayList<>();
  private Map<String, Integer> mockComposition = new HashMap<>();
  private double mockValue = 1000.0;
  private StringBuilder logger ;

  @Override
  public void addPortfolio() {
    // Do nothing in mock implementation
  }

  @Override
  public void createBuilder(String portfolioName) {
    logger.append("Creating builder for portfolio: ").append(portfolioName);
  }

  @Override
  public void addShare(String shareName, int quantity) {
    logger.append("Adding share: ").append(shareName).append(", Quantity: ").append(quantity);
  }

  @Override
  public void loadPortfolioData(String pathName) {
    logger.append("Loading portfolio data from path: ").append(pathName);
  }

  @Override
  public boolean exists(String name) {
    logger.append("Checking existence of portfolio: ").append(name);
    return true;
  }

  @Override
  public ArrayList<String> getListOfPortfoliosName() {
    ArrayList<String> listOfPortfolios = new ArrayList<>();
    listOfPortfolios.add("MockPortfolio");
    return listOfPortfolios;
  }

  @Override
  public Map<String, Integer> portfolioComposition(int input) {
    logger.append("Retrieving composition for portfolio at index: ").append(input);
    return mockComposition;
  }

  @Override
  public int getSize() {
    return portfolioDirectory.size();
  }

  @Override
  public void savePortfolio(int input, String path) {
    logger.append("Saving portfolio at index: ").append(input).append(" to path: ").append(path);
  }

  @Override
  public double portfolioValue(int input, String date) {
    logger.append("Calculating portfolio value at index: ").append(input).append(", Date: ").append(date);
    return mockValue;
  }

  @Override
  public boolean isEmpty() {
    return portfolioDirectory.isEmpty();
  }

  @Override
  public void deleteSessionCSVFilesFromStocklist(String directoryPath) throws IOException {
    logger.append("Deleting session CSV files from directory: ").append(directoryPath);
  }
}
